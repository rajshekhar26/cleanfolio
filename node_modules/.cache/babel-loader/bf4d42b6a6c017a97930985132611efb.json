{"ast":null,"code":"import _slicedToArray from\"C:/Users/152029/Documents/Portfolio/cleanfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var ThemeContext=/*#__PURE__*/createContext();var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),themeName=_useState2[0],setThemeName=_useState2[1];useEffect(function(){var isDark=localStorage.getItem('themeName')==='dark';if(isDark)setThemeName('dark');},[]);var toggleTheme=function toggleTheme(){var name=themeName==='dark'?'light':'dark';localStorage.setItem('themeName',name);setThemeName(name);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:[{themeName:themeName,toggleTheme:toggleTheme}],children:children});};export{ThemeProvider,ThemeContext};","map":{"version":3,"sources":["C:/Users/152029/Documents/Portfolio/cleanfolio/src/contexts/theme.js"],"names":["createContext","useEffect","useState","ThemeContext","ThemeProvider","children","themeName","setThemeName","isDark","localStorage","getItem","toggleTheme","name","setItem"],"mappings":"qKAAA,OAASA,aAAT,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,OAAnD,C,2CAGA,GAAMC,CAAAA,YAAY,cAAGH,aAAa,EAAlC,CAEA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACJH,QAAQ,CAAC,OAAD,CADJ,wCAC/BI,SAD+B,eACpBC,YADoB,eAGtCN,SAAS,CAAC,UAAM,CACd,GAAMO,CAAAA,MAAM,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAsC,MAArD,CACA,GAAIF,MAAJ,CAAYD,YAAY,CAAC,MAAD,CAAZ,CACb,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,IAAI,CAAGN,SAAS,GAAK,MAAd,CAAuB,OAAvB,CAAiC,MAA9C,CACAG,YAAY,CAACI,OAAb,CAAqB,WAArB,CAAkCD,IAAlC,EACAL,YAAY,CAACK,IAAD,CAAZ,CACD,CAJD,CAMA,mBACE,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAC,CAAEN,SAAS,CAATA,SAAF,CAAaK,WAAW,CAAXA,WAAb,CAAD,CAA9B,UACGN,QADH,EADF,CAKD,CAnBD,CAyBA,OAASD,aAAT,CAAwBD,YAAxB","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const isDark = localStorage.getItem('themeName') === 'dark'\r\n    if (isDark) setThemeName('dark')\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n"]},"metadata":{},"sourceType":"module"}